{"version":3,"sources":["withTranslator.jsx"],"names":["withTranslator","translator","context","dictionary","Object","keys","length","hasOwnTranslator","derive","ensureTranslator","locale","props","children","others","Component","displayName","Target","name","propTypes","PropTypes","string","defaultProps","contextTypes","object","childContextTypes"],"mappings":";;;;;;;;;;AAEA;;;;AACA;;;;;;;;;;;;+eAHA;AACA;;;AAGA;;AAEA;;AAEA,IAAMA,iBAAiB,SAAjBA,cAAiB;AAAA,SAAc;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAkBd;AACjB,cAAI,KAAKC,UAAT,EAAqB;AACnB;AACD;AACD,cAAMA,aAAa,KAAKC,OAAL,CAAaD,UAAhC;AACA,cAAIE,cAAc,IAAd,IAAsBC,OAAOC,IAAP,CAAYF,UAAZ,EAAwBG,MAAlD,EAA0D;AACxD,iBAAKC,gBAAL,GAAwB,IAAxB;AACA,iBAAKN,UAAL,GAAkBA,WAAWO,MAAX,CAAkBL,UAAlB,CAAlB;AACD,WAHD,MAGO;AACL,iBAAKI,gBAAL,GAAwB,KAAxB;AACA,iBAAKN,UAAL,GAAkBA,UAAlB;AACD;AACF;AA9BgC;AAAA;AAAA,0CAgCf;AAChB,eAAKQ,gBAAL;AACA,cAAI,KAAKF,gBAAT,EAA2B;AACzB,mBAAO;AACLN,0BAAY,KAAKA,UADZ;AAELS,sBAAQ,KAAKC,KAAL,CAAWD,MAAX,IAAqB,KAAKR,OAAL,CAAaQ;AAFrC,aAAP;AAID;AACD,iBAAO,EAAP;AACD;AAzCgC;AAAA;AAAA,6CA2CZ;AACnB,eAAKD,gBAAL;AACD;AA7CgC;AAAA;AAAA,+CA+CV;AACrB,eAAKF,gBAAL,GAAwB,KAAxB;AACA,eAAKN,UAAL,GAAkB,IAAlB;AACD;AAlDgC;AAAA;AAAA,iCAoDxB;AAAA,uBACyB,KAAKU,KAD9B;AAAA,cACCC,QADD,UACCA,QADD;AAAA,cACcC,MADd;;AAEP,eAAKZ,UAAL,CAAgBS,MAAhB,CAAuB,KAAKC,KAAL,CAAWD,MAAX,IAAqB,KAAKR,OAAL,CAAaQ,MAAzD;AACA,iBACE;AAAC,kBAAD;AAAA,yBAAYG,MAAZ,IAAoB,YAAY,KAAKZ,UAArC;AACGW;AADH,WADF;AAKD;AA5DgC;;AAAA;AAAA,MACNE,gBADM,UAE1BC,WAF0B,wBAEMC,OAAOD,WAAP,IAAsBC,OAAOC,IAA7B,IAAqC,WAF3C,gBAG1BC,SAH0B,GAGd;AACjBR,cAAQS,oBAAUC;AADD,KAHc,SAM1BC,YAN0B,GAMX;AACpBX,cAAQ;AADY,KANW,SAS1BY,YAT0B,GASX;AACpBrB,kBAAYkB,oBAAUI,MADF;AAEpBb,cAAQS,oBAAUC;AAFE,KATW,SAa1BI,iBAb0B,GAaN;AACzBvB,kBAAYkB,oBAAUI,MADG;AAEzBb,cAAQS,oBAAUC;AAFO,KAbM;AAAA,GAAd;AAAA,CAAvB;;kBAgEepB,c","file":"withTranslator.js","sourcesContent":["// MIT license (see LICENSE)\n// Copyright 2019 @rigidrabbit\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n// import createTranslator from './createTranslator'\n\n// const nop = createTranslator()\n\nconst withTranslator = dictionary => Target => (\n  class WithTranslator extends Component {\n    static displayName = `WithTranslator(${Target.displayName || Target.name || 'Component'})`\n    static propTypes = {\n      locale: PropTypes.string,\n    }\n    static defaultProps = {\n      locale: '',\n    }\n    static contextTypes = {\n      translator: PropTypes.object,\n      locale: PropTypes.string,\n    }\n    static childContextTypes = {\n      translator: PropTypes.object,\n      locale: PropTypes.string,\n    }\n\n    ensureTranslator() {\n      if (this.translator) {\n        return\n      }\n      const translator = this.context.translator\n      if (dictionary != null && Object.keys(dictionary).length) {\n        this.hasOwnTranslator = true\n        this.translator = translator.derive(dictionary)\n      } else {\n        this.hasOwnTranslator = false\n        this.translator = translator\n      }\n    }\n\n    getChildContext() {\n      this.ensureTranslator()\n      if (this.hasOwnTranslator) {\n        return {\n          translator: this.translator,\n          locale: this.props.locale || this.context.locale,\n        }\n      }\n      return {}\n    }\n\n    componentWillMount() {\n      this.ensureTranslator()\n    }\n\n    componentWillUnmount() {\n      this.hasOwnTranslator = false\n      this.translator = null\n    }\n\n    render() {\n      const { children, ...others } = this.props\n      this.translator.locale(this.props.locale || this.context.locale)\n      return (\n        <Target {...others} translator={this.translator}>\n          {children}\n        </Target>\n      )\n    }\n  }\n)\n\nexport default withTranslator\n"]}